ylab(paste0("Eigenvector 2 explicando ", round(pc.percent, 2)[2], "%"))+
theme(axis.title.y = element_text(size = rel(2), angle = 90))+
theme(axis.title.x = element_text(size = rel(2), angle = 360))+
theme(axis.text.x = element_text(hjust = .5, size=13, color="black"))+
theme(axis.text.y = element_text(hjust = .5, size=13, color="black"))+
geom_point(alpha = 1/20)+
scale_shape_manual(values=c(0,1,2,3,4,5,6,7,8,11,13,15,16,17,18,35,38,43,64))
## Draw a zoom with same values of PCA with ozone condition
tab2<- tab[-c(1:3,21:25,41:43,44:47,48:50,51:55,71:74,84:88), ]
ggplot(tab2, aes(x=EV1, y=EV2))+
geom_point(aes(color=Condicion, shape=Poblacion), size =5) +
scale_color_manual(values = pobcol) +
theme(legend.title = element_text(size=15))+
theme(legend.text = element_text(size = 15))+
xlab(paste0("Eigenvector 1 explicando ", round(pc.percent, 2)[1], "%")) +
ylab(paste0("Eigenvector 2 explicando ", round(pc.percent, 2)[2], "%"))+
theme(axis.title.y = element_text(size = rel(2), angle = 90))+
theme(axis.title.x = element_text(size = rel(2), angle = 360))+
theme(axis.text.x = element_text(hjust = .5, size=13, color="black"))+
theme(axis.text.y = element_text(hjust = .5, size=13, color="black"))+
geom_point(alpha = 1/20)+
scale_shape_manual(values=c(0,1,4,5,6,11,13,15,18,38,43))
## Draw with plate sequencing
tab$PLACA<-fullmat$PLACA[match(tab$sample.id, fullmat$key_comun)]
pobcol<- c(  "#FF00FF","#99CC33",  "#9999FF", "#33CCFF", "#0066FF", "#33CCFF","#9933FF", "#FF99FF", "#FF0000", "#FF9933", "#FFCC33", "#FF00FF", "#CC9900", "#666666", "#000000", "#FF7A12", "#FF42B3" )
ggplot(tab, aes(x=EV1, y=EV2))+
geom_point(aes(color=PLACA), size =1) +
scale_color_manual(values = pobcol) +
theme(legend.title = element_text(size=13))+
theme(legend.text = element_text(size = 12))+
xlab(paste0("Eigenvector 1 explicando ", round(pc.percent, 2)[1], "%")) +
ylab(paste0("Eigenvector 2 explicando ", round(pc.percent, 2)[2], "%"))+
theme(axis.title.y = element_text(size = rel(1.5), angle = 90))+
theme(axis.title.x = element_text(size = rel(1.5), angle = 360))+
theme(axis.text.x = element_text(hjust = .5, size=13, color="black"))+
theme(axis.text.y = element_text(hjust = .5, size=13, color="black"))+
geom_point(alpha = 1/20)
## Draw PCA with ozone condition
ggplot(tab, aes(x=EV1, y=EV2))+
geom_point(aes(color=Condicion, shape=Poblacion), size =5) +
scale_color_manual(values = pobcol) +
theme(legend.title = element_text(size=15))+
theme(legend.text = element_text(size = 15))+
xlab(paste0("Eigenvector 1 explicando ", round(pc.percent, 2)[1], "%")) +
ylab(paste0("Eigenvector 2 explicando ", round(pc.percent, 2)[2], "%"))+
theme(axis.title.y = element_text(size = rel(2), angle = 90))+
theme(axis.title.x = element_text(size = rel(2), angle = 360))+
theme(axis.text.x = element_text(hjust = .5, size=13, color="black"))+
theme(axis.text.y = element_text(hjust = .5, size=13, color="black"))+
geom_point(alpha = 1/20)+
scale_shape_manual(values=c(0,1,2,3,4,5,6,7,8,11,13,15,16,17,18,35,38,43,64))
## Draw a zoom with same values of PCA with ozone condition
tab2<- tab[-c(1:3,21:25,41:43,44:47,48:50,51:55,71:74,84:88), ]
ggplot(tab2, aes(x=EV1, y=EV2))+
geom_point(aes(color=Condicion, shape=Poblacion), size =5) +
scale_color_manual(values = pobcol) +
theme(legend.title = element_text(size=15))+
theme(legend.text = element_text(size = 15))+
xlab(paste0("Eigenvector 1 explicando ", round(pc.percent, 2)[1], "%")) +
ylab(paste0("Eigenvector 2 explicando ", round(pc.percent, 2)[2], "%"))+
theme(axis.title.y = element_text(size = rel(2), angle = 90))+
theme(axis.title.x = element_text(size = rel(2), angle = 360))+
theme(axis.text.x = element_text(hjust = .5, size=13, color="black"))+
theme(axis.text.y = element_text(hjust = .5, size=13, color="black"))+
geom_point(alpha = 1/20)+
scale_shape_manual(values=c(0,1,4,5,6,11,13,15,18,38,43))
## Draw PCA with ozone condition
ggplot(tab, aes(x=EV1, y=EV2))+
geom_point(aes(color=Condicion, shape=Poblacion), size =5) +
scale_color_manual(values = pobcol) +
theme(legend.title = element_text(size=15))+
theme(legend.text = element_text(size = 15))+
xlab(paste0("Eigenvector 1 explicando ", round(pc.percent, 2)[1], "%")) +
ylab(paste0("Eigenvector 2 explicando ", round(pc.percent, 2)[2], "%"))+
theme(axis.title.y = element_text(size = rel(2), angle = 90))+
theme(axis.title.x = element_text(size = rel(2), angle = 360))+
theme(axis.text.x = element_text(hjust = .5, size=13, color="black"))+
theme(axis.text.y = element_text(hjust = .5, size=13, color="black"))+
geom_point(alpha = 1/20)+
scale_shape_manual(values=c(0,1,2,3,4,5,6,7,8,11,13,15,16,17,18,35,38,43,64))
## Make a data.frame with eigenvects values
tab <- data.frame(sample.id = pca$sample.id, EV1 = pca$eigenvect[,1],    # the first eigenvector,
EV2 = pca$eigenvect[,2],    # the second eigenvector
stringsAsFactors = FALSE)
## Load metadata file
fullmat<-read.csv("../../metadata/PLACA_FINAL_89_samples.csv", header = TRUE, sep = ",")
tab
## Load metadata file
fullmat<-read.csv("../../metadata/PLACA_FINAL_89_samples.csv", header = TRUE, sep = ",")
View(fullmat)
## Match metadata info with eigenvectors values
tab$Poblacion<-fullmat$Localidad[match(tab$sample.id, fullmat$key_comun)]
tab$Poblacion
## Choose nice colors and ozone condition
pobcol<- c( "#e94b57",
"#000000",
"#76c74f")
View(tab)
tab$Condicion<- c("otro","otro","otro","otro",
"otro","otro","otro",
"da単ada","da単ada","da単ada","da単ada",
"sana","sana","sana","sana","sana",
"otro","otro","otro","otro","otro","otro","otro","otro","otro","otro",
"otro","otro","otro","otro","otro","otro","otro","otro","otro","otro",
"otro","otro","otro","otro","otro","otro","otro","otro","otro","otro",
"otro","otro","otro","otro","otro","otro","otro","otro","otro","otro",
"otro","otro","otro","otro","otro","otro","otro","otro","otro","otro",
"otro","otro","otro","otro","otro","otro","otro","otro","otro","otro",
"otro","otro","otro","otro","otro","otro","otro","otro","otro","otro",
"otro","otro")
tab
View(tab)
## Draw PCA with ozone condition
ggplot(tab, aes(x=EV1, y=EV2))+
geom_point(aes(color=Condicion, shape=Poblacion), size =5) +
scale_color_manual(values = pobcol) +
theme(legend.title = element_text(size=15))+
theme(legend.text = element_text(size = 15))+
xlab(paste0("Eigenvector 1 explicando ", round(pc.percent, 2)[1], "%")) +
ylab(paste0("Eigenvector 2 explicando ", round(pc.percent, 2)[2], "%"))+
theme(axis.title.y = element_text(size = rel(2), angle = 90))+
theme(axis.title.x = element_text(size = rel(2), angle = 360))+
theme(axis.text.x = element_text(hjust = .5, size=13, color="black"))+
theme(axis.text.y = element_text(hjust = .5, size=13, color="black"))+
geom_point(alpha = 1/20)+
scale_shape_manual(values=c(0,1,2,3,4,5,6,7,8,11,13,15,16,17,18,35,38,43,64))
pca$eigenvect[,1]
## Draw PCA with ozone condition
ggplot(tab, aes(x=EV1, y=EV2))+
geom_point(aes(color=Condicion, shape=Poblacion), size =5) +
scale_color_manual(values = pobcol) +
theme(legend.title = element_text(size=15))+
theme(legend.text = element_text(size = 15))+
xlab(paste0("Eigenvector 1 explicando ", round(pc.percent, 2)[1], "%")) +
ylab(paste0("Eigenvector 2 explicando ", round(pc.percent, 2)[2], "%"))+
theme(axis.title.y = element_text(size = rel(2), angle = 90))+
theme(axis.title.x = element_text(size = rel(2), angle = 360))+
theme(axis.text.x = element_text(hjust = .5, size=13, color="black"))+
theme(axis.text.y = element_text(hjust = .5, size=13, color="black"))+
geom_point(alpha = 1/20)+
scale_shape_manual(values=c(0,1,2,3,4,5,6,7,8,11,13,15,16,17,18,35,38,43,64))
## Load data cross validation
log <- read.table("../data/admixture/logall_snp_withoutDupLoci_88s_maxmiss0.9_maf0.05.txt")
## Load data cross validation
log <- read.table("../../metadata/admixture/logall_snp_withoutDupLoci_88s_maxmiss0.9_maf0.05.txt")
## Load packages
library(magrittr)
library(reshape)
library(ggplot2)
## Load data cross validation
log <- read.table("../../metadata/admixture/logall_snp_withoutDupLoci_88s_maxmiss0.9_maf0.05.txt")
## Load data cross validation
log <- read.table("../../metadata/admixture_PQ_files//logall_snp_withoutDupLoci_88s_maxmiss0.9_maf0.05.txt")
ggplot(data=log, aes(x= V1, y= V2))+
geom_point(colour = "#33CCFF") +
geom_line(colour = "#33CCFF") +
ylim(.40, 1.2) +
labs(x="Valor de K" , y="Cross-validation error")+
theme(axis.title.x = element_text(size = rel(1.3)))+
theme(axis.title.y = element_text(size = rel(1.3)))+
theme(axis.text.x = element_text(hjust = .5, size=11, color="black"))+
theme(axis.text.y = element_text(hjust = .5, size=11, color="black"))
structureplot <- function(str_out,pops,k,xlab = F)
{
#Sort columns by prevalence
str_out <- str_out[,order(apply(str_out,2,sum),decreasing = T)]
x <- melt(as.matrix(str_out)) %>%
transform(X1 = factor(X1, rownames(str_out)),
X2 = factor(X2, colnames(str_out)),
value = as.numeric(paste(value)))
x$pop <- rep(pops[,1],k)
str_out$pop <- pops[,1]
x$X3 <- factor(paste(letters[as.numeric(x$pop)],x$X1,sep = "_"))
x <- x[order(x$X3),]
pop_pos <- cumsum(tapply(1:nrow(str_out),str_out$pop,length))
labpos <- pop_pos
for(i in 1:length(pop_pos))
{
if(i == 1)
{
labpos[i] <- pop_pos[i]/2
} else
{
labpos[i] <- pop_pos[i-1] + (pop_pos[i]-pop_pos[i-1])/2
}
}
labpos <- pop_pos
for(i in 1:length(pop_pos))
{
if(i == 1)
{
labpos[i] <- pop_pos[i]/2
} else
{
labpos[i] <- pop_pos[i-1] + (pop_pos[i]-pop_pos[i-1])/2
}
}
labpos <- round(labpos,0)
#Specify some nice colours
mycols <- c("#bfb9f7",
"#f8b6f1",
"#62d4ef",
"#87e54f",
"#f5a952"
)[1:k]
if(xlab ==T)
{
output <- ggplot(x,
aes(x = as.numeric(X3),y = value, fill = X2))+
geom_bar(stat = "identity",width = 2)+
theme_bw()+
scale_x_continuous(breaks = labpos,labels = names(pop_pos),expand = c(0,0))+
scale_y_continuous(expand = c(0,0))+
geom_vline(xintercept = pop_pos)+
xlab("")+
ylab("")+
theme(axis.text.x = element_text(vjust = 0.1,hjust = 1,angle = 90),
axis.ticks = element_blank(),
legend.position = "none")+
scale_fill_manual(values = mycols)
} else
{
output <- ggplot(x,
aes(x = as.numeric(X3),y = value, fill = X2))+
geom_bar(stat = "identity",width = 2)+
theme_bw()+
scale_x_continuous(breaks = labpos,labels = rep("",length(pop_pos)),expand = c(0,0))+
scale_y_continuous(expand = c(0,0))+
geom_vline(xintercept = pop_pos)+
xlab("")+
ylab("")+
theme(axis.text.x = element_text(vjust = 0.1,hjust = 1,angle = 90),
axis.ticks = element_blank(),
legend.position = "none")+
scale_fill_manual(values = mycols)
}
return(output)
}
structureplot_popord <- function(str_out,pops,k,xlab = T, target_order)
{
#Sort columns by prevalence
str_out <- str_out[,order(apply(str_out,2,sum),decreasing = T)]
x <- melt(as.matrix(str_out)) %>%
transform(X1 = factor(X1, rownames(str_out)),
X2 = factor(X2, colnames(str_out)),
value = as.numeric(paste(value)))
x$pop <- rep(pops[,1],k)
str_out$pop <- pops[,1]
#reorder x by pop in target order
x<-x[order(unlist(sapply(x$pop, function(y) which(target_order == y)))),]
x$pop<-factor(x$pop, levels=target_order)
str_out$pop <-factor(str_out$pop, levels=target_order)
# add pop codes and reorder
x$X3 <- factor(paste(letters[as.numeric(x$pop)],x$X1,sep = "_"))
x <- x[order(x$X3),]
pop_pos <- cumsum(tapply(1:nrow(str_out),str_out$pop,length))
labpos <- pop_pos
for(i in 1:length(pop_pos))
{
if(i == 1)
{
labpos[i] <- pop_pos[i]/2
} else
{
labpos[i] <- pop_pos[i-1] + (pop_pos[i]-pop_pos[i-1])/2
}
}
labpos <- round(labpos,0)
#Specify some nice colours
mycols <- c("#bfb9f7",
"#f8b6f1",
"#62d4ef",
"#87e54f",
"#f5a952"
)[1:k]
if(xlab ==T)
{
output <- ggplot(x,
aes(x = as.numeric(X3),y = value, fill = X2))+
geom_bar(stat = "identity",width = 2)+
theme_bw()+
scale_x_continuous(breaks = labpos,labels = names(pop_pos),expand = c(0,0))+
scale_y_continuous(expand = c(0,0))+
geom_vline(xintercept = pop_pos)+
xlab("")+
ylab("")+
theme(axis.text.x = element_text(vjust = 0.1,hjust = 1,angle = 90),
axis.ticks = element_blank(),
legend.position = "none")+
scale_fill_manual(values = mycols)
} else
{
output <- ggplot(x,
aes(x = as.numeric(X3),y = value, fill = X2))+
geom_bar(stat = "identity",width = 2)+
theme_bw()+
scale_x_continuous(breaks = labpos,labels = rep("",length(pop_pos)),expand = c(0,0))+
scale_y_continuous(expand = c(0,0))+
geom_vline(xintercept = pop_pos)+
xlab("")+
ylab("")+
theme(axis.text.x = element_text(vjust = 0.1,hjust = 1,angle = 90),
axis.ticks = element_blank(),
legend.position = "none")+
scale_fill_manual(values = mycols)
}
return(output)
}
{
output <- ggplot(x,
aes(x = as.numeric(X3),y = value, fill = X2))+
geom_bar(stat = "identity",width = 2)+
theme_bw()+
scale_x_continuous(breaks = labpos,labels = rep("",length(pop_pos)),expand = c(0,0))+
scale_y_continuous(expand = c(0,0))+
geom_vline(xintercept = pop_pos)+
xlab("")+
ylab("")+
theme(axis.text.x = element_text(vjust = 0.1,hjust = 1,angle = 90),
axis.ticks = element_blank(),
legend.position = "none")+
scale_fill_manual(values = mycols)
}
structureplot <- function(str_out,pops,k,xlab = F)
{
#Sort columns by prevalence
str_out <- str_out[,order(apply(str_out,2,sum),decreasing = T)]
x <- melt(as.matrix(str_out)) %>%
transform(X1 = factor(X1, rownames(str_out)),
X2 = factor(X2, colnames(str_out)),
value = as.numeric(paste(value)))
x$pop <- rep(pops[,1],k)
str_out$pop <- pops[,1]
x$X3 <- factor(paste(letters[as.numeric(x$pop)],x$X1,sep = "_"))
x <- x[order(x$X3),]
pop_pos <- cumsum(tapply(1:nrow(str_out),str_out$pop,length))
labpos <- pop_pos
for(i in 1:length(pop_pos))
{
if(i == 1)
{
labpos[i] <- pop_pos[i]/2
} else
{
labpos[i] <- pop_pos[i-1] + (pop_pos[i]-pop_pos[i-1])/2
}
}
labpos <- pop_pos
for(i in 1:length(pop_pos))
{
if(i == 1)
{
labpos[i] <- pop_pos[i]/2
} else
{
labpos[i] <- pop_pos[i-1] + (pop_pos[i]-pop_pos[i-1])/2
}
}
labpos <- round(labpos,0)
#Specify some nice colours
mycols <- c("#bfb9f7",
"#f8b6f1",
"#62d4ef",
"#87e54f",
"#f5a952"
)[1:k]
if(xlab ==T)
{
output <- ggplot(x,
aes(x = as.numeric(X3),y = value, fill = X2))+
geom_bar(stat = "identity",width = 2)+
theme_bw()+
scale_x_continuous(breaks = labpos,labels = names(pop_pos),expand = c(0,0))+
scale_y_continuous(expand = c(0,0))+
geom_vline(xintercept = pop_pos)+
xlab("")+
ylab("")+
theme(axis.text.x = element_text(vjust = 0.1,hjust = 1,angle = 90),
axis.ticks = element_blank(),
legend.position = "none")+
scale_fill_manual(values = mycols)
} else
{
output <- ggplot(x,
aes(x = as.numeric(X3),y = value, fill = X2))+
geom_bar(stat = "identity",width = 2)+
theme_bw()+
scale_x_continuous(breaks = labpos,labels = rep("",length(pop_pos)),expand = c(0,0))+
scale_y_continuous(expand = c(0,0))+
geom_vline(xintercept = pop_pos)+
xlab("")+
ylab("")+
theme(axis.text.x = element_text(vjust = 0.1,hjust = 1,angle = 90),
axis.ticks = element_blank(),
legend.position = "none")+
scale_fill_manual(values = mycols)
}
return(output)
}
structureplot_popord <- function(str_out,pops,k,xlab = T, target_order)
{
#Sort columns by prevalence
str_out <- str_out[,order(apply(str_out,2,sum),decreasing = T)]
x <- melt(as.matrix(str_out)) %>%
transform(X1 = factor(X1, rownames(str_out)),
X2 = factor(X2, colnames(str_out)),
value = as.numeric(paste(value)))
x$pop <- rep(pops[,1],k)
str_out$pop <- pops[,1]
#reorder x by pop in target order
x<-x[order(unlist(sapply(x$pop, function(y) which(target_order == y)))),]
x$pop<-factor(x$pop, levels=target_order)
str_out$pop <-factor(str_out$pop, levels=target_order)
# add pop codes and reorder
x$X3 <- factor(paste(letters[as.numeric(x$pop)],x$X1,sep = "_"))
x <- x[order(x$X3),]
pop_pos <- cumsum(tapply(1:nrow(str_out),str_out$pop,length))
labpos <- pop_pos
for(i in 1:length(pop_pos))
{
if(i == 1)
{
labpos[i] <- pop_pos[i]/2
} else
{
labpos[i] <- pop_pos[i-1] + (pop_pos[i]-pop_pos[i-1])/2
}
}
labpos <- round(labpos,0)
#Specify some nice colours
mycols <- c("#bfb9f7",
"#f8b6f1",
"#62d4ef",
"#87e54f",
"#f5a952"
)[1:k]
if(xlab ==T)
{
output <- ggplot(x,
aes(x = as.numeric(X3),y = value, fill = X2))+
geom_bar(stat = "identity",width = 2)+
theme_bw()+
scale_x_continuous(breaks = labpos,labels = names(pop_pos),expand = c(0,0))+
scale_y_continuous(expand = c(0,0))+
geom_vline(xintercept = pop_pos)+
xlab("")+
ylab("")+
theme(axis.text.x = element_text(vjust = 0.1,hjust = 1,angle = 90),
axis.ticks = element_blank(),
legend.position = "none")+
scale_fill_manual(values = mycols)
} else
{
output <- ggplot(x,
aes(x = as.numeric(X3),y = value, fill = X2))+
geom_bar(stat = "identity",width = 2)+
theme_bw()+
scale_x_continuous(breaks = labpos,labels = rep("",length(pop_pos)),expand = c(0,0))+
scale_y_continuous(expand = c(0,0))+
geom_vline(xintercept = pop_pos)+
xlab("")+
ylab("")+
theme(axis.text.x = element_text(vjust = 0.1,hjust = 1,angle = 90),
axis.ticks = element_blank(),
legend.position = "none")+
scale_fill_manual(values = mycols)
}
return(output)
}
## Load data about family
famfile <- read.table("../../data/without_Dup_loci/snp_withoutDupLoci_88s_maxmiss0.9_maf0.05.fam")
View(famfile)
par(mfrow=c(4,1))
z<-c("SierraManantlan","NevadoColima","VolcanTancitaro","PuertaGarnica","MichoacanAlt",
"SanAndres","CerroZamorano","CerroBlanco","NevadoTolucaRG","NevadoTolucaNT",
"NevadoTolucaSB","SantaRosaXochiacD", "SantaRosaXochiacS", "Ajusco","Ixtapalucan",
"ElChico","Tlaxco","VolcanAtlitzin","Malinche","CofrePerote")
# K2
qfile <- read.table("../data/admixture/snp_withoutDupLoci_88s_maxmiss0.9_maf0.05.2.Q")
# K2
qfile <- read.table("../../metadata/admixture_PQ_files/snp_withoutDupLoci_88s_maxmiss0.9_maf0.05.2.Q")
structureplot_popord(str_out = qfile, pops = famfile, k = 2, xlab = T, target_order=z)
# K3
qfile <- read.table("../../metadata/admixture_PQ_files/snp_withoutDupLoci_88s_maxmiss0.9_maf0.05.3.Q")
structureplot_popord(str_out = qfile,pops = famfile,k = 3, xlab = T, target_order =z)
# K4
qfile <- read.table("../../metadata/admixture_PQ_files/snp_withoutDupLoci_88s_maxmiss0.9_maf0.05.4.Q")
structureplot_popord(str_out = qfile,pops = famfile,k = 4, xlab = T, target_order =z)
# K5
qfile <- read.table("../../metadata/admixture_PQ_files/snp_withoutDupLoci_88s_maxmiss0.9_maf0.05.5.Q")
structureplot_popord(str_out = qfile,pops = famfile,k = 5, xlab = T, target_order =z)
# K2
qfile <- read.table("../../metadata/admixture_PQ_files/snp_withoutDupLoci_88s_maxmiss0.9_maf0.05.2.Q")
structureplot_popord(str_out = qfile, pops = famfile, k = 2, xlab = T, target_order=z)
# K3
qfile <- read.table("../../metadata/admixture_PQ_files/snp_withoutDupLoci_88s_maxmiss0.9_maf0.05.3.Q")
structureplot_popord(str_out = qfile,pops = famfile,k = 3, xlab = T, target_order =z)
# K4
qfile <- read.table("../../metadata/admixture_PQ_files/snp_withoutDupLoci_88s_maxmiss0.9_maf0.05.4.Q")
structureplot_popord(str_out = qfile,pops = famfile,k = 4, xlab = T, target_order =z)
# K5
qfile <- read.table("../../metadata/admixture_PQ_files/snp_withoutDupLoci_88s_maxmiss0.9_maf0.05.5.Q")
structureplot_popord(str_out = qfile,pops = famfile,k = 5, xlab = T, target_order =z)
# Load file ".het"
file<- read.delim("../../data/samples_het_snp_withoutDupLoci_10ind_maxmiss0.9_maf0.05.het")
file$HeO<- file$N_SITES-file$O.HOM.
file$HeE<- file$N_SITES-file$E.HOM.
file$PrHeO<-file$O.HOM./file$N_SITES
file$PrHeE<-file$E.HOM./file$N_SITES
file$condition<- c("healthy", "healthy", "healthy", "healthy", "healthy",
"damaged", "damaged", "damaged", "damaged", "damaged" )
pairwise.t.test(file$PrHeO, file$condition)
